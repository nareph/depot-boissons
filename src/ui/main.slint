// src/ui/main.slint 

import { Button, LineEdit, ComboBox, ScrollView, CheckBox } from "std-widgets.slint";
import { HorizontalBox, VerticalBox } from "std-widgets.slint";
import { AppHeader } from "./components/header.slint";
import { AppSidebar } from "./components/sidebar.slint";
import { DashboardView } from "./views/dashboard.slint";
import { ProductsView } from "./views/products.slint";
import { SalesView } from "./views/sales.slint";
import { UsersView } from "./views/users.slint";
import { LowStockProductUI, ProductUI, UserUI, SaleUI } from "./components/models.slint";
import { PrinterConfigOverlay, PrinterUI, PrinterErrorUI, PrinterSuccessUI, PrinterTestResultUI } from "./views/printer_config.slint";
import { ReportingView, ReportKPI, TopProductUI } from "./views/reporting_view.slint"; 

// Import du thème
import { AppTheme, AppStyles } from "./theme/colors.slint";

export component MainWindow inherits Window {
    title: "Tableau de Bord - Dépôt de Boissons";
    
    min-width: 800px;
    min-height: 600px;
    preferred-width: 1200px;
    preferred-height: 800px;
    
    // === PROPRIÉTÉS ===
    in-out property <string> welcome_message;
    in property <bool> is_admin;
    in property <string> today_revenue;
    in property <string> today_sales_count;
    in property <[LowStockProductUI]> low_stock_products_model;
    in-out property <bool> dashboard_loading: false;

    
    // Propriétés pour les produits, utilisateurs, ventes...
    in property <[ProductUI]> products_model;
    in property <int> product_current_page: 1;
    in property <int> product_total_pages: 1;
    in property <int> total_products: 0;
    in property <int> products_per_page: 5;
    in property <string> product_search_query: "";
    in property <string> product_stock_filter: "all";
    in property <string> product_sort_by: "name";
    in property <string> product_sort_order: "asc";

    in property <[UserUI]> users_model;
    in property <int> user_current_page: 1;
    in property <int> user_total_pages: 1;
    in property <int> user_total_users: 0;
    in property <int> users_per_page: 5;
    in property <string> user_search_query: "";
    in property <string> role_filter: "all";
    in property <string> user_sort_by: "name";
    in property <string> user_sort_order: "asc";

    in property <[SaleUI]> sales_model;
    in property <int> sale_current_page: 1;
    in property <int> sale_total_pages: 1;
    in property <int> total_sales: 0;
    in property <int> sales_per_page: 5;
    in property <string> sale_search_query: "";
    in property <string> date_filter: "all";
    in property <string> sale_sort_by: "date";
    in property <string> sale_sort_order: "desc";

    // === PROPRIÉTÉS POUR LES IMPRIMANTES ===
    in-out property <[PrinterUI]> printers_model;
    in-out property <bool> show_printer_config: false;
    in-out property <PrinterErrorUI> printer_error: { has_error: false, message: "", icon: "", color: "", error_type: "" };
    in-out property <PrinterSuccessUI> printer_success: { has_success: false, message: "", icon: "" };
    in-out property <PrinterTestResultUI> printer_test_result: { is_testing: false, has_result: false, success: false, message: "", printer_name: "" };
    in-out property <[string]> printer_port_suggestions: [];
    in-out property <string> printer_help_message: "";
    in-out property <bool> is_adding_printer: false;

     // === PROPRIÉTÉS POUR LES RAPPORTS ===
    in property <[ReportKPI]> report_kpis;
    in property <[TopProductUI]> report_top_products;
    in property <bool> report_is_loading: false;
    in-out property <int> report_selected_period_index: 0;

    
    // Callbacks
    callback request_dashboard_data();
    callback refresh_dashboard();
    callback request_products();
    callback request_users();
    callback request_sales();
    callback add_user_clicked();
    callback edit_user_clicked(string);         
    callback delete_user_clicked(string, string); 
    callback reset_password_clicked(string, string);  
    callback search_users(string);
    callback filter_users(string);
    callback sort_users(string, string);
    callback user_change_page(int);
    callback user_change_page_size(int);  
    callback add_product_clicked();
    callback edit_product_clicked(string);      
    callback delete_product_clicked(string, string);    
    callback search_products(string);
    callback filter_products(string);
    callback sort_products(string, string);
    callback product_change_page(int);
    callback product_change_page_size(int);
    callback add_sale_clicked();
    callback view_sale_details(string);
    callback search_sales(string);
    callback filter_sales(string);
    callback sort_sales(string, string);
    callback sale_change_page(int);
    callback sale_change_page_size(int);
    callback change_password_clicked();
    callback logout_clicked();
    callback show_printer_config_clicked();
    callback import_products_clicked();
    
    // === CALLBACKS POUR LES IMPRIMANTES ===
    callback test_printer(string);
    callback set_default_printer(string);
    callback add_printer(PrinterUI);
    callback remove_printer(string);
    callback load_printers();
    callback clear_printer_notifications();
    callback get_printer_port_suggestions(string);
    callback get_printer_help_message(string);
    callback set_printer_error(PrinterErrorUI);
    callback set_printer_success(PrinterSuccessUI);
    callback set_printer_test_result(PrinterTestResultUI);

    // === CALLBACKS POUR LES RAPPORTS ===
    callback request_report_data(string);
    callback export_pdf_clicked();
    callback export_excel_clicked();

    property <int> current_view_index: 0;
    
    // Conteneur principal 
    Rectangle {
        width: 100%;
        height: 100%;
        background: AppStyles.container-main;
        
        VerticalBox {
            spacing: 8px;
            padding: 8px;
            
            // Header 
            Rectangle {
                height: 60px;
                background: AppTheme.background-overlay-light;
                border-radius: AppStyles.border-radius-md;
                drop-shadow-blur: AppStyles.shadow-blur;
                drop-shadow-color: AppTheme.shadow-medium;
                
                AppHeader {
                    width: 100%;
                    height: 100%;
                    welcome_message: root.welcome_message;
                    change_password_clicked => { root.change_password_clicked(); }
                    logout_clicked => { root.logout_clicked(); }
                    printer_config_clicked => { 
                        root.load_printers();
                        root.show_printer_config = true; 
                    }
                }
            }

            // Contenu principal
            Rectangle {
                background: AppTheme.background-overlay-medium;
                border-radius: AppStyles.border-radius-md;
                drop-shadow-blur: AppStyles.shadow-blur;
                drop-shadow-color: AppTheme.shadow-medium;
                
                HorizontalBox {
                    spacing: 8px;
                    padding: 8px;
                    
                    // Sidebar 
                    Rectangle {
                        width: 250px;
                        background: AppTheme.background-overlay-dark;
                        border-radius: AppStyles.border-radius-md;
                        
                        AppSidebar {
                            width: 100%;
                            height: 100%;
                            current_view_index: root.current_view_index;
                            is_admin: root.is_admin;
                            view-changed(index) => { root.current_view_index = index; }
                        }
                    }
                    
                    // Zone de contenu principal
                    Rectangle {
                        background: AppTheme.background-content;
                        border-radius: AppStyles.border-radius-md;
                        border-width: 1px;
                        border-color: AppTheme.border-light;
                        
                        // Animation subtile 
                        animate background { 
                            duration: AppStyles.animation-duration; 
                            easing: AppStyles.animation-ease; 
                        }
                        
                        if root.current_view_index == 0: Rectangle {
                            DashboardView {
                                width: 100%;
                                height: 100%;
                                today_revenue: root.today_revenue;
                                today_sales_count: root.today_sales_count;
                                low_stock_products_model: root.low_stock_products_model;
                                dashboard_loading: root.dashboard_loading;
                                refresh_requested => {
                                    root.refresh_dashboard();
                                }
                            }
                        }
                        
                        if root.current_view_index == 1: Rectangle {
                            ProductsView {
                                width: 100%;
                                height: 100%;
                                products_model: root.products_model;
                                is_admin: root.is_admin;  
                                current_page: root.product_current_page;
                                total_pages: root.product_total_pages;
                                total_products: root.total_products;
                                products_per_page: root.products_per_page;
                                search_query: root.product_search_query;
                                stock_filter: root.product_stock_filter;
                                sort_by: root.product_sort_by;
                                sort_order: root.product_sort_order;
                                request_products => { root.request_products(); }
                                add_product_clicked => { root.add_product_clicked() }
                                edit_product_clicked(product_id) => { root.edit_product_clicked(product_id) }
                                delete_product_clicked(product_id, product_name) => { root.delete_product_clicked(product_id, product_name) }
                                search_products(search_term) => { root.search_products(search_term); }
                                filter_products(filter_term) => { root.filter_products(filter_term); }
                                sort_products(sort_by, sort_order) => { root.sort_products(sort_by, sort_order); }
                                change_page(page) => { root.product_change_page(page); }
                                change_page_size(page_size) => { root.product_change_page_size(page_size); }
                                import_products_clicked => { root.import_products_clicked(); }
                            }
                        }

                        if root.current_view_index == 2: Rectangle {
                            SalesView {
                                width: 100%;
                                height: 100%;
                                sales_model: root.sales_model;
                                is_admin: root.is_admin;  
                                current_page: root.sale_current_page;
                                total_pages: root.sale_total_pages;
                                total_sales: root.total_sales;
                                sales_per_page: root.sales_per_page;
                                search_query: root.sale_search_query;
                                date_filter: root.date_filter;
                                sort_by: root.sale_sort_by;
                                sort_order: root.sale_sort_order;
                                request_sales => { root.request_sales(); }
                                add_sale_clicked => { root.add_sale_clicked(); }
                                view_sale_details(sale_id) => { root.view_sale_details(sale_id); }
                                search_sales(search_term) => { root.search_sales(search_term); }
                                filter_sales(filter_term) => { root.filter_sales(filter_term); }
                                sort_sales(sort_by, sort_order) => { root.sort_sales(sort_by, sort_order); }
                                change_page(page) => { root.sale_change_page(page); }
                                change_page_size(page_size) => { root.sale_change_page_size(page_size); }
                            }
                        }
                        
                        if root.current_view_index == 3: Rectangle {
                            UsersView {
                                width: 100%;
                                height: 100%;
                                users_model: root.users_model;
                                current_page: root.user_current_page;
                                total_pages: root.user_total_pages;
                                total_users: root.user_total_users;
                                users_per_page: root.users_per_page;
                                search_query: root.user_search_query;
                                role_filter: root.role_filter;
                                sort_by: root.user_sort_by;
                                sort_order: root.user_sort_order;
                                request_users => { root.request_users(); }
                                add_user_clicked => { root.add_user_clicked(); }
                                edit_user_clicked(user_id) => { root.edit_user_clicked(user_id); }
                                delete_user_clicked(user_id, username) => { root.delete_user_clicked(user_id, username); }
                                reset_password_clicked(user_id, username) => { root.reset_password_clicked(user_id, username); }
                                search_users(search_term) => { root.search_users(search_term); }
                                filter_users(filter_term) => { root.filter_users(filter_term); }
                                sort_users(sort_by, sort_order) => { root.sort_users(sort_by, sort_order); }
                                change_page(page) => { root.user_change_page(page); }
                                change_page_size(page_size) => { root.user_change_page_size(page_size); }
                            }
                        }

                        if root.current_view_index == 4 && root.is_admin: ReportingView {
                            kpis: root.report_kpis;
                            top_products: root.report_top_products;
                            is_loading: root.report_is_loading;
                            selected_period_index <=> root.report_selected_period_index;
                            
                            request_report_data(period) => { root.request_report_data(period); }
                            export_pdf_clicked => { root.export_pdf_clicked(); }
                            export_excel_clicked => { root.export_excel_clicked(); }
                        }
                    }
                }
            }
        }
        
        // === OVERLAY DE CONFIGURATION D'IMPRIMANTE ===
        if root.show_printer_config: PrinterConfigOverlay {
            printers: root.printers_model;
            current_error: root.printer_error;
            current_success: root.printer_success;
            test_result: root.printer_test_result;
            port_suggestions: root.printer_port_suggestions;
            help_message: root.printer_help_message;
            is_adding_printer: root.is_adding_printer;
            
            test_printer(printer_name) => { root.test_printer(printer_name); }
            set_default_printer(printer_name) => { root.set_default_printer(printer_name); }
            add_printer(printer) => { root.add_printer(printer); }
            remove_printer(printer_name) => { root.remove_printer(printer_name); }
            close_dialog() => { root.show_printer_config = false; }
            clear_notifications() => { root.clear_printer_notifications(); }
            get_port_suggestions(printer_type) => { root.get_printer_port_suggestions(printer_type); }
            get_help_message(printer_type) => { root.get_printer_help_message(printer_type); }
        }
    }
}