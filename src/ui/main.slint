// src/ui/main.slint 

import { HorizontalBox, VerticalBox } from "std-widgets.slint";
import { AppHeader } from "./components/header.slint";
import { AppSidebar } from "./components/sidebar.slint";
import { DashboardView } from "./views/dashboard.slint";
import { ProductsView } from "./views/products.slint";
import { SalesView } from "./views/sales.slint";
import { UsersView } from "./views/users.slint";
import { LowStockProductUI, ProductUI, UserUI, SaleUI } from "./components/models.slint";

export component MainWindow inherits Window {
    title: "Tableau de Bord - Dépôt de Boissons";
    
    min-width: 800px;
    min-height: 600px;
    preferred-width: 1200px;
    preferred-height: 800px;
    
    // === PROPRIÉTÉS POUR LE DASHBOARD ===   
    in-out property <string> welcome_message;
    in property <bool> is_admin;
    in property <string> today_revenue;
    in property <string> today_sales_count;
    in property <[LowStockProductUI]> low_stock_products_model;
 
    // === PROPRIÉTÉS POUR LA VUE PRODUITS ===
    in property <[ProductUI]> products_model;
    in property <int> product_current_page: 1;
    in property <int> product_total_pages: 1;
    in property <int> total_products: 0;
    in property <int> products_per_page: 5;
    
    in property <string> product_search_query: "";
    in property <string> product_stock_filter: "all"; // "all", "in_stock", "out_of_stock"
    in property <string> product_sort_by: "name"; // "name", "stock", "price"
    in property <string> product_sort_order: "asc"; 


    // === PROPRIÉTÉS POUR LA VUE UTILISATEURS ===
    in property <[UserUI]> users_model;
    in property <int> user_current_page: 1;
    in property <int> user_total_pages: 1;
    in property <int> user_total_users: 0;
    in property <int> users_per_page: 5;
    in property <string> user_search_query: "";
    in property <string> role_filter: "all"; // "all", "admin", "user"
    in property <string> user_sort_by: "name"; // "name", "role"
    in property <string> user_sort_order: "asc"; // "asc", "desc"

    // === PROPRIÉTÉS POUR LA VUE VENTES ===
    in property <[SaleUI]> sales_model;
    in property <int> sale_current_page: 1;
    in property <int> sale_total_pages: 1;
    in property <int> total_sales: 0;
    in property <int> sales_per_page: 5;
    in property <string> sale_search_query: "";
    in property <string> date_filter: "all";
    in property <string> sale_sort_by: "date";
    in property <string> sale_sort_order: "desc";
    
    // Callbacks
    callback request_dashboard_data();
    callback request_products();
    callback request_users();
    callback request_sales();

    // Callbacks pour les utilisateurs
    callback add_user_clicked();
    callback edit_user_clicked(string);         
    callback delete_user_clicked(string, string); 
    callback reset_password_clicked(string, string);  
    callback search_users(string);
    callback filter_users(string);
    callback sort_users(string, string);
     // (préfixés pour éviter les conflits)
    callback user_change_page(int);
    callback user_change_page_size(int);  

    // Callbacks pour les produits 
    callback add_product_clicked();
    callback edit_product_clicked(string);      
    callback delete_product_clicked(string, string);    
    callback search_products(string);
    callback filter_products(string);
    callback sort_products(string, string);
   // (préfixés pour éviter les conflits)
    callback product_change_page(int);
    callback product_change_page_size(int);

   // Callbacks pour les ventes
    callback add_sale_clicked();
    callback view_sale_details(string);
    callback search_sales(string);
    callback filter_sales(string);
    callback sort_sales(string, string);
    callback sale_change_page(int);
    callback sale_change_page_size(int);

    // Callbacks de session
    callback change_password_clicked();
    callback logout_clicked();

    property <int> current_view_index: 0;
    
    Rectangle {
        width: 100%;
        height: 100%;
        background: @linear-gradient(145deg, #667eea 0%, #764ba2 100%);
        
        VerticalBox {
            spacing: 2px;
            padding: 0px;
            
            AppHeader {
                height: 60px;
                welcome_message: root.welcome_message;
                change_password_clicked => { root.change_password_clicked(); }
                logout_clicked => { root.logout_clicked(); }
            }

            HorizontalBox {
                spacing: 0px;
                padding: 0px;
                
                AppSidebar {
                    current_view_index: root.current_view_index;
                    is_admin: root.is_admin;
                    view-changed(index) => { root.current_view_index = index; }
                }
                // Zone de contenu principal qui s'étire automatiquement
                Rectangle {
                    background: transparent;
                    // Cette zone prend automatiquement tout l'espace restant
                    
                    if root.current_view_index == 0: DashboardView {
                        width: 100%;
                        height: 100%;
                        today_revenue: root.today_revenue;
                        today_sales_count: root.today_sales_count;
                        low_stock_products_model: root.low_stock_products_model;
                    }
                    if root.current_view_index == 1: ProductsView {
                        width: 100%;
                        height: 100%;
                        products_model: root.products_model;
                        is_admin: root.is_admin;  
                        current_page: root.product_current_page;
                        total_pages: root.product_total_pages;
                        total_products: root.total_products;
                        products_per_page: root.products_per_page;
                        search_query: root.product_search_query;
                        stock_filter: root.product_stock_filter;
                        sort_by: root.product_sort_by;
                        sort_order: root.product_sort_order;
                        request_products => { root.request_products(); }
                        add_product_clicked => { root.add_product_clicked() }
                        edit_product_clicked(product_id) => { root.edit_product_clicked(product_id) }
                        delete_product_clicked(product_id, product_name) => { root.delete_product_clicked(product_id, product_name) }
                        search_products(search_term) => { root.search_products(search_term); }
                        filter_products(filter_term) => { root.filter_products(filter_term); }
                        sort_products(sort_by, sort_order) => { root.sort_products(sort_by, sort_order); }
                        change_page(page) => { root.product_change_page(page); }
                        change_page_size(page_size) => { root.product_change_page_size(page_size); }
                    }

                    if root.current_view_index == 2: SalesView {
                        width: 100%;
                        height: 100%;
                        sales_model: root.sales_model;
                        is_admin: root.is_admin;  
                        current_page: root.sale_current_page;
                        total_pages: root.sale_total_pages;
                        total_sales: root.total_sales;
                        sales_per_page: root.sales_per_page;
                        search_query: root.sale_search_query;
                        date_filter: root.date_filter;
                        sort_by: root.sale_sort_by;
                        sort_order: root.sale_sort_order;
                        request_sales => { root.request_sales(); }
                        add_sale_clicked => { root.add_sale_clicked(); }
                        view_sale_details(sale_id) => { root.view_sale_details(sale_id); }
                        search_sales(search_term) => { root.search_sales(search_term); }
                        filter_sales(filter_term) => { root.filter_sales(filter_term); }
                        sort_sales(sort_by, sort_order) => { root.sort_sales(sort_by, sort_order); }
                        change_page(page) => { root.sale_change_page(page); }
                        change_page_size(page_size) => { root.sale_change_page_size(page_size); }
                    }
                    if root.current_view_index == 3: UsersView {
                        width: 100%;
                        height: 100%;
                        users_model: root.users_model;
                        current_page: root.user_current_page;
                        total_pages: root.user_total_pages;
                        total_users: root.user_total_users;
                        users_per_page: root.users_per_page;
                        search_query: root.user_search_query;
                        role_filter: root.role_filter;
                        sort_by: root.user_sort_by;
                        sort_order: root.user_sort_order;
                        request_users => { root.request_users(); }
                        add_user_clicked => { root.add_user_clicked(); }
                        edit_user_clicked(user_id) => { root.edit_user_clicked(user_id); }
                        delete_user_clicked(user_id, username) => { root.delete_user_clicked(user_id, username); }
                        reset_password_clicked(user_id, username) => { root.reset_password_clicked(user_id, username); }
                        search_users(search_term) => { root.search_users(search_term); }
                        filter_users(filter_term) => { root.filter_users(filter_term); }
                        sort_users(sort_by, sort_order) => { root.sort_users(sort_by, sort_order); }
                        change_page(page) => { root.user_change_page(page); }
                        change_page_size(page_size) => { root.user_change_page_size(page_size); }
                    }
                }
            }
        }
    }
}